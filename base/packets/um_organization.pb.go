// Code generated by protoc-gen-go. DO NOT EDIT.
// source: um_organization.proto

package packets

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OrganizationRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationRequest) Reset()         { *m = OrganizationRequest{} }
func (m *OrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*OrganizationRequest) ProtoMessage()    {}
func (*OrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5223a48edff1a390, []int{0}
}

func (m *OrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationRequest.Unmarshal(m, b)
}
func (m *OrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationRequest.Marshal(b, m, deterministic)
}
func (m *OrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationRequest.Merge(m, src)
}
func (m *OrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_OrganizationRequest.Size(m)
}
func (m *OrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationRequest proto.InternalMessageInfo

func (m *OrganizationRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type UpdateOrganizationRequest struct {
	OrganizationID       string   `protobuf:"bytes,1,opt,name=OrganizationID,proto3" json:"OrganizationID,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateOrganizationRequest) Reset()         { *m = UpdateOrganizationRequest{} }
func (m *UpdateOrganizationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateOrganizationRequest) ProtoMessage()    {}
func (*UpdateOrganizationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5223a48edff1a390, []int{1}
}

func (m *UpdateOrganizationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateOrganizationRequest.Unmarshal(m, b)
}
func (m *UpdateOrganizationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateOrganizationRequest.Marshal(b, m, deterministic)
}
func (m *UpdateOrganizationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateOrganizationRequest.Merge(m, src)
}
func (m *UpdateOrganizationRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateOrganizationRequest.Size(m)
}
func (m *UpdateOrganizationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateOrganizationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateOrganizationRequest proto.InternalMessageInfo

func (m *UpdateOrganizationRequest) GetOrganizationID() string {
	if m != nil {
		return m.OrganizationID
	}
	return ""
}

func (m *UpdateOrganizationRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type OrganizationRequestByID struct {
	OrganizationID       string   `protobuf:"bytes,1,opt,name=OrganizationID,proto3" json:"OrganizationID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationRequestByID) Reset()         { *m = OrganizationRequestByID{} }
func (m *OrganizationRequestByID) String() string { return proto.CompactTextString(m) }
func (*OrganizationRequestByID) ProtoMessage()    {}
func (*OrganizationRequestByID) Descriptor() ([]byte, []int) {
	return fileDescriptor_5223a48edff1a390, []int{2}
}

func (m *OrganizationRequestByID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationRequestByID.Unmarshal(m, b)
}
func (m *OrganizationRequestByID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationRequestByID.Marshal(b, m, deterministic)
}
func (m *OrganizationRequestByID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationRequestByID.Merge(m, src)
}
func (m *OrganizationRequestByID) XXX_Size() int {
	return xxx_messageInfo_OrganizationRequestByID.Size(m)
}
func (m *OrganizationRequestByID) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationRequestByID.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationRequestByID proto.InternalMessageInfo

func (m *OrganizationRequestByID) GetOrganizationID() string {
	if m != nil {
		return m.OrganizationID
	}
	return ""
}

type OrganizationRequestByCode struct {
	Code                 string   `protobuf:"bytes,1,opt,name=Code,proto3" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrganizationRequestByCode) Reset()         { *m = OrganizationRequestByCode{} }
func (m *OrganizationRequestByCode) String() string { return proto.CompactTextString(m) }
func (*OrganizationRequestByCode) ProtoMessage()    {}
func (*OrganizationRequestByCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_5223a48edff1a390, []int{3}
}

func (m *OrganizationRequestByCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrganizationRequestByCode.Unmarshal(m, b)
}
func (m *OrganizationRequestByCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrganizationRequestByCode.Marshal(b, m, deterministic)
}
func (m *OrganizationRequestByCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrganizationRequestByCode.Merge(m, src)
}
func (m *OrganizationRequestByCode) XXX_Size() int {
	return xxx_messageInfo_OrganizationRequestByCode.Size(m)
}
func (m *OrganizationRequestByCode) XXX_DiscardUnknown() {
	xxx_messageInfo_OrganizationRequestByCode.DiscardUnknown(m)
}

var xxx_messageInfo_OrganizationRequestByCode proto.InternalMessageInfo

func (m *OrganizationRequestByCode) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type OutputOrganization struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OutputOrganization) Reset()         { *m = OutputOrganization{} }
func (m *OutputOrganization) String() string { return proto.CompactTextString(m) }
func (*OutputOrganization) ProtoMessage()    {}
func (*OutputOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_5223a48edff1a390, []int{4}
}

func (m *OutputOrganization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OutputOrganization.Unmarshal(m, b)
}
func (m *OutputOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OutputOrganization.Marshal(b, m, deterministic)
}
func (m *OutputOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OutputOrganization.Merge(m, src)
}
func (m *OutputOrganization) XXX_Size() int {
	return xxx_messageInfo_OutputOrganization.Size(m)
}
func (m *OutputOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_OutputOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_OutputOrganization proto.InternalMessageInfo

func (m *OutputOrganization) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *OutputOrganization) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*OrganizationRequest)(nil), "packets.OrganizationRequest")
	proto.RegisterType((*UpdateOrganizationRequest)(nil), "packets.UpdateOrganizationRequest")
	proto.RegisterType((*OrganizationRequestByID)(nil), "packets.OrganizationRequestByID")
	proto.RegisterType((*OrganizationRequestByCode)(nil), "packets.OrganizationRequestByCode")
	proto.RegisterType((*OutputOrganization)(nil), "packets.OutputOrganization")
}

func init() { proto.RegisterFile("um_organization.proto", fileDescriptor_5223a48edff1a390) }

var fileDescriptor_5223a48edff1a390 = []byte{
	// 373 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x93, 0x4b, 0x4f, 0xea, 0x40,
	0x14, 0xc7, 0x2f, 0x37, 0x5c, 0x6e, 0x38, 0x24, 0x2c, 0xc6, 0x67, 0xd1, 0x05, 0xce, 0xc2, 0xb0,
	0x1a, 0x12, 0x5c, 0xba, 0x30, 0x40, 0x13, 0x25, 0x9a, 0x90, 0xd4, 0x60, 0xd4, 0x68, 0x70, 0xa0,
	0xc7, 0xda, 0x40, 0x3b, 0xb5, 0x9d, 0x2e, 0xea, 0xc7, 0xf4, 0x13, 0x19, 0xa6, 0x45, 0x79, 0x54,
	0x20, 0xa1, 0xab, 0xb6, 0xa7, 0xff, 0xf3, 0xfb, 0xcf, 0x79, 0x0c, 0xec, 0x85, 0x4e, 0x5f, 0xf8,
	0x16, 0x77, 0xed, 0x0f, 0x2e, 0x6d, 0xe1, 0x32, 0xcf, 0x17, 0x52, 0x90, 0xff, 0x1e, 0x1f, 0x8e,
	0x50, 0x06, 0x15, 0xcd, 0x12, 0xc2, 0x1a, 0x63, 0x5d, 0x85, 0x07, 0xe1, 0x6b, 0x9d, 0xbb, 0x51,
	0xac, 0xa1, 0x17, 0xb0, 0xd3, 0x9d, 0xc9, 0x34, 0xf0, 0x3d, 0xc4, 0x40, 0x92, 0x1a, 0xe4, 0x75,
	0x2e, 0xf9, 0x61, 0xae, 0x9a, 0xab, 0x95, 0x1a, 0xbb, 0x2c, 0x06, 0xb0, 0x29, 0x80, 0x35, 0xdd,
	0xc8, 0x50, 0x0a, 0xea, 0x80, 0xd6, 0xf3, 0x4c, 0x2e, 0x31, 0x0d, 0x73, 0x0a, 0xe5, 0xd9, 0x70,
	0x47, 0x57, 0xc0, 0xa2, 0xb1, 0x10, 0xfd, 0xb6, 0xfb, 0xbb, 0xd6, 0xae, 0x09, 0x07, 0x29, 0x46,
	0xad, 0xa8, 0xa3, 0x6f, 0x6a, 0x46, 0xeb, 0xa0, 0xa5, 0x22, 0xda, 0xc2, 0x44, 0x42, 0x20, 0x3f,
	0x79, 0x26, 0xa9, 0xea, 0x9d, 0xde, 0x01, 0xe9, 0x86, 0xd2, 0x0b, 0xe5, 0x6c, 0x1a, 0xd9, 0x87,
	0xc2, 0xad, 0xe4, 0x32, 0x0c, 0x94, 0xf6, 0x9f, 0x91, 0x7c, 0x6d, 0x5e, 0x4b, 0xe3, 0xb3, 0x00,
	0xe5, 0x9e, 0x33, 0x07, 0x7d, 0x86, 0xca, 0x25, 0xce, 0xf9, 0xb4, 0xa2, 0x8e, 0xd9, 0x0b, 0x70,
	0xc8, 0x03, 0x24, 0x55, 0x96, 0x4c, 0x94, 0xfd, 0xd2, 0x83, 0xca, 0xd1, 0x8f, 0x62, 0xe9, 0xc4,
	0xf4, 0x0f, 0x79, 0x50, 0xf8, 0x1b, 0x3b, 0x98, 0xfb, 0x31, 0xc5, 0x1f, 0xaf, 0xc2, 0xaf, 0x43,
	0xdf, 0x83, 0xd6, 0xf6, 0x71, 0x61, 0x0f, 0xb2, 0x22, 0x2f, 0x6f, 0x58, 0x26, 0xe4, 0x27, 0xd0,
	0x74, 0x1c, 0x63, 0x3a, 0x79, 0xeb, 0x66, 0x5f, 0x41, 0xb1, 0xfd, 0x86, 0xc3, 0xd1, 0x64, 0xd6,
	0xdb, 0x9d, 0xb3, 0x0f, 0xd5, 0x94, 0xb1, 0xe9, 0xc8, 0xc7, 0xe8, 0x67, 0xd2, 0x08, 0x0b, 0xe8,
	0xc2, 0xda, 0xc5, 0xf0, 0xf8, 0x52, 0x4c, 0x2d, 0xe8, 0xea, 0x8e, 0x4c, 0xa4, 0xeb, 0x8c, 0x5e,
	0xe0, 0x24, 0xa5, 0x92, 0x6b, 0x74, 0x84, 0x30, 0xed, 0x2c, 0x4a, 0x69, 0x95, 0x1e, 0x8b, 0xec,
	0x3c, 0x51, 0x0c, 0x0a, 0xea, 0xd6, 0x9d, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0x8a, 0x69, 0xaa,
	0xf7, 0x21, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UmOrganizationClient is the client API for UmOrganization service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UmOrganizationClient interface {
	GetOrganizationByIdUsecase(ctx context.Context, in *OrganizationRequestByID, opts ...grpc.CallOption) (*OutputOrganization, error)
	GetListOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
	CreateOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
	UpdateOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
	DeleteOrganizationUsecase(ctx context.Context, in *OrganizationRequestByID, opts ...grpc.CallOption) (*OutputOrganization, error)
	CheckData(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
	GetListOrganizationDealerUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
	GetOrganizationDealerByCodeUsecase(ctx context.Context, in *OrganizationRequestByCode, opts ...grpc.CallOption) (*OutputOrganization, error)
	GetListOrganizationKemoodiUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error)
}

type umOrganizationClient struct {
	cc *grpc.ClientConn
}

func NewUmOrganizationClient(cc *grpc.ClientConn) UmOrganizationClient {
	return &umOrganizationClient{cc}
}

func (c *umOrganizationClient) GetOrganizationByIdUsecase(ctx context.Context, in *OrganizationRequestByID, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/GetOrganizationByIdUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) GetListOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/GetListOrganizationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) CreateOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/CreateOrganizationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) UpdateOrganizationUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/UpdateOrganizationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) DeleteOrganizationUsecase(ctx context.Context, in *OrganizationRequestByID, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/DeleteOrganizationUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) CheckData(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/CheckData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) GetListOrganizationDealerUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/GetListOrganizationDealerUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) GetOrganizationDealerByCodeUsecase(ctx context.Context, in *OrganizationRequestByCode, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/GetOrganizationDealerByCodeUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *umOrganizationClient) GetListOrganizationKemoodiUsecase(ctx context.Context, in *OrganizationRequest, opts ...grpc.CallOption) (*OutputOrganization, error) {
	out := new(OutputOrganization)
	err := c.cc.Invoke(ctx, "/packets.UmOrganization/GetListOrganizationKemoodiUsecase", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UmOrganizationServer is the server API for UmOrganization service.
type UmOrganizationServer interface {
	GetOrganizationByIdUsecase(context.Context, *OrganizationRequestByID) (*OutputOrganization, error)
	GetListOrganizationUsecase(context.Context, *OrganizationRequest) (*OutputOrganization, error)
	CreateOrganizationUsecase(context.Context, *OrganizationRequest) (*OutputOrganization, error)
	UpdateOrganizationUsecase(context.Context, *OrganizationRequest) (*OutputOrganization, error)
	DeleteOrganizationUsecase(context.Context, *OrganizationRequestByID) (*OutputOrganization, error)
	CheckData(context.Context, *OrganizationRequest) (*OutputOrganization, error)
	GetListOrganizationDealerUsecase(context.Context, *OrganizationRequest) (*OutputOrganization, error)
	GetOrganizationDealerByCodeUsecase(context.Context, *OrganizationRequestByCode) (*OutputOrganization, error)
	GetListOrganizationKemoodiUsecase(context.Context, *OrganizationRequest) (*OutputOrganization, error)
}

// UnimplementedUmOrganizationServer can be embedded to have forward compatible implementations.
type UnimplementedUmOrganizationServer struct {
}

func (*UnimplementedUmOrganizationServer) GetOrganizationByIdUsecase(ctx context.Context, req *OrganizationRequestByID) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationByIdUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) GetListOrganizationUsecase(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListOrganizationUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) CreateOrganizationUsecase(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOrganizationUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) UpdateOrganizationUsecase(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateOrganizationUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) DeleteOrganizationUsecase(ctx context.Context, req *OrganizationRequestByID) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOrganizationUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) CheckData(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckData not implemented")
}
func (*UnimplementedUmOrganizationServer) GetListOrganizationDealerUsecase(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListOrganizationDealerUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) GetOrganizationDealerByCodeUsecase(ctx context.Context, req *OrganizationRequestByCode) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrganizationDealerByCodeUsecase not implemented")
}
func (*UnimplementedUmOrganizationServer) GetListOrganizationKemoodiUsecase(ctx context.Context, req *OrganizationRequest) (*OutputOrganization, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetListOrganizationKemoodiUsecase not implemented")
}

func RegisterUmOrganizationServer(s *grpc.Server, srv UmOrganizationServer) {
	s.RegisterService(&_UmOrganization_serviceDesc, srv)
}

func _UmOrganization_GetOrganizationByIdUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).GetOrganizationByIdUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/GetOrganizationByIdUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).GetOrganizationByIdUsecase(ctx, req.(*OrganizationRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_GetListOrganizationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).GetListOrganizationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/GetListOrganizationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).GetListOrganizationUsecase(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_CreateOrganizationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).CreateOrganizationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/CreateOrganizationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).CreateOrganizationUsecase(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_UpdateOrganizationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).UpdateOrganizationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/UpdateOrganizationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).UpdateOrganizationUsecase(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_DeleteOrganizationUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequestByID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).DeleteOrganizationUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/DeleteOrganizationUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).DeleteOrganizationUsecase(ctx, req.(*OrganizationRequestByID))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_CheckData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).CheckData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/CheckData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).CheckData(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_GetListOrganizationDealerUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).GetListOrganizationDealerUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/GetListOrganizationDealerUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).GetListOrganizationDealerUsecase(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_GetOrganizationDealerByCodeUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequestByCode)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).GetOrganizationDealerByCodeUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/GetOrganizationDealerByCodeUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).GetOrganizationDealerByCodeUsecase(ctx, req.(*OrganizationRequestByCode))
	}
	return interceptor(ctx, in, info, handler)
}

func _UmOrganization_GetListOrganizationKemoodiUsecase_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OrganizationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UmOrganizationServer).GetListOrganizationKemoodiUsecase(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.UmOrganization/GetListOrganizationKemoodiUsecase",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UmOrganizationServer).GetListOrganizationKemoodiUsecase(ctx, req.(*OrganizationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UmOrganization_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packets.UmOrganization",
	HandlerType: (*UmOrganizationServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetOrganizationByIdUsecase",
			Handler:    _UmOrganization_GetOrganizationByIdUsecase_Handler,
		},
		{
			MethodName: "GetListOrganizationUsecase",
			Handler:    _UmOrganization_GetListOrganizationUsecase_Handler,
		},
		{
			MethodName: "CreateOrganizationUsecase",
			Handler:    _UmOrganization_CreateOrganizationUsecase_Handler,
		},
		{
			MethodName: "UpdateOrganizationUsecase",
			Handler:    _UmOrganization_UpdateOrganizationUsecase_Handler,
		},
		{
			MethodName: "DeleteOrganizationUsecase",
			Handler:    _UmOrganization_DeleteOrganizationUsecase_Handler,
		},
		{
			MethodName: "CheckData",
			Handler:    _UmOrganization_CheckData_Handler,
		},
		{
			MethodName: "GetListOrganizationDealerUsecase",
			Handler:    _UmOrganization_GetListOrganizationDealerUsecase_Handler,
		},
		{
			MethodName: "GetOrganizationDealerByCodeUsecase",
			Handler:    _UmOrganization_GetOrganizationDealerByCodeUsecase_Handler,
		},
		{
			MethodName: "GetListOrganizationKemoodiUsecase",
			Handler:    _UmOrganization_GetListOrganizationKemoodiUsecase_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "um_organization.proto",
}
