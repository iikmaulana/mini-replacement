// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vehicle_replacement.proto

package packets

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type VehicleReplacementRequest struct {
	Data                 *any.Any `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleReplacementRequest) Reset()         { *m = VehicleReplacementRequest{} }
func (m *VehicleReplacementRequest) String() string { return proto.CompactTextString(m) }
func (*VehicleReplacementRequest) ProtoMessage()    {}
func (*VehicleReplacementRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_786464e44a786139, []int{0}
}

func (m *VehicleReplacementRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleReplacementRequest.Unmarshal(m, b)
}
func (m *VehicleReplacementRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleReplacementRequest.Marshal(b, m, deterministic)
}
func (m *VehicleReplacementRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleReplacementRequest.Merge(m, src)
}
func (m *VehicleReplacementRequest) XXX_Size() int {
	return xxx_messageInfo_VehicleReplacementRequest.Size(m)
}
func (m *VehicleReplacementRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleReplacementRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleReplacementRequest proto.InternalMessageInfo

func (m *VehicleReplacementRequest) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

type VehicleReplacementOutput struct {
	Status               int32    `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Data                 *any.Any `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VehicleReplacementOutput) Reset()         { *m = VehicleReplacementOutput{} }
func (m *VehicleReplacementOutput) String() string { return proto.CompactTextString(m) }
func (*VehicleReplacementOutput) ProtoMessage()    {}
func (*VehicleReplacementOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_786464e44a786139, []int{1}
}

func (m *VehicleReplacementOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VehicleReplacementOutput.Unmarshal(m, b)
}
func (m *VehicleReplacementOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VehicleReplacementOutput.Marshal(b, m, deterministic)
}
func (m *VehicleReplacementOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VehicleReplacementOutput.Merge(m, src)
}
func (m *VehicleReplacementOutput) XXX_Size() int {
	return xxx_messageInfo_VehicleReplacementOutput.Size(m)
}
func (m *VehicleReplacementOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_VehicleReplacementOutput.DiscardUnknown(m)
}

var xxx_messageInfo_VehicleReplacementOutput proto.InternalMessageInfo

func (m *VehicleReplacementOutput) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *VehicleReplacementOutput) GetData() *any.Any {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*VehicleReplacementRequest)(nil), "packets.VehicleReplacementRequest")
	proto.RegisterType((*VehicleReplacementOutput)(nil), "packets.VehicleReplacementOutput")
}

func init() { proto.RegisterFile("vehicle_replacement.proto", fileDescriptor_786464e44a786139) }

var fileDescriptor_786464e44a786139 = []byte{
	// 219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2c, 0x4b, 0xcd, 0xc8,
	0x4c, 0xce, 0x49, 0x8d, 0x2f, 0x4a, 0x2d, 0xc8, 0x49, 0x4c, 0x4e, 0xcd, 0x4d, 0xcd, 0x2b, 0xd1,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x48, 0x4c, 0xce, 0x4e, 0x2d, 0x29, 0x96, 0x92,
	0x4c, 0xcf, 0xcf, 0x4f, 0xcf, 0x49, 0xd5, 0x07, 0x0b, 0x27, 0x95, 0xa6, 0xe9, 0x27, 0xe6, 0x55,
	0x42, 0xd4, 0x28, 0xb9, 0x72, 0x49, 0x86, 0x41, 0x0c, 0x08, 0x42, 0xe8, 0x0f, 0x4a, 0x2d, 0x2c,
	0x4d, 0x2d, 0x2e, 0x11, 0xd2, 0xe0, 0x62, 0x71, 0x49, 0x2c, 0x49, 0x94, 0x60, 0x54, 0x60, 0xd4,
	0xe0, 0x36, 0x12, 0xd1, 0x83, 0x18, 0xa3, 0x07, 0x33, 0x46, 0xcf, 0x31, 0xaf, 0x32, 0x08, 0xac,
	0x42, 0x29, 0x86, 0x4b, 0x02, 0xd3, 0x18, 0xff, 0xd2, 0x92, 0x82, 0xd2, 0x12, 0x21, 0x31, 0x2e,
	0xb6, 0xe0, 0x92, 0xc4, 0x92, 0xd2, 0x62, 0xb0, 0x39, 0xac, 0x41, 0x50, 0x1e, 0xdc, 0x74, 0x26,
	0x42, 0xa6, 0x1b, 0x9d, 0x61, 0xe4, 0x12, 0xc2, 0x34, 0x5e, 0x28, 0x8a, 0x8b, 0xdf, 0xb9, 0x28,
	0x35, 0xb1, 0x24, 0xd5, 0xb7, 0x04, 0x2a, 0x2b, 0xa4, 0xa4, 0x07, 0xf5, 0xb3, 0x1e, 0x4e, 0x5f,
	0x49, 0x29, 0xe2, 0x51, 0x03, 0x71, 0xb2, 0x12, 0x03, 0xc8, 0xec, 0xd0, 0x82, 0x14, 0x9a, 0x98,
	0xed, 0xc4, 0x1d, 0xc5, 0xa9, 0x67, 0x0d, 0x55, 0x97, 0xc4, 0x06, 0xf6, 0xaf, 0x31, 0x20, 0x00,
	0x00, 0xff, 0xff, 0x70, 0xde, 0x20, 0x93, 0xc8, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// VehicleReplacementClient is the client API for VehicleReplacement service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type VehicleReplacementClient interface {
	CreateMtVehicle(ctx context.Context, in *VehicleReplacementRequest, opts ...grpc.CallOption) (*VehicleReplacementOutput, error)
	UpdateMtVehicle(ctx context.Context, in *VehicleReplacementRequest, opts ...grpc.CallOption) (*VehicleReplacementOutput, error)
}

type vehicleReplacementClient struct {
	cc *grpc.ClientConn
}

func NewVehicleReplacementClient(cc *grpc.ClientConn) VehicleReplacementClient {
	return &vehicleReplacementClient{cc}
}

func (c *vehicleReplacementClient) CreateMtVehicle(ctx context.Context, in *VehicleReplacementRequest, opts ...grpc.CallOption) (*VehicleReplacementOutput, error) {
	out := new(VehicleReplacementOutput)
	err := c.cc.Invoke(ctx, "/packets.VehicleReplacement/CreateMtVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *vehicleReplacementClient) UpdateMtVehicle(ctx context.Context, in *VehicleReplacementRequest, opts ...grpc.CallOption) (*VehicleReplacementOutput, error) {
	out := new(VehicleReplacementOutput)
	err := c.cc.Invoke(ctx, "/packets.VehicleReplacement/UpdateMtVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// VehicleReplacementServer is the server API for VehicleReplacement service.
type VehicleReplacementServer interface {
	CreateMtVehicle(context.Context, *VehicleReplacementRequest) (*VehicleReplacementOutput, error)
	UpdateMtVehicle(context.Context, *VehicleReplacementRequest) (*VehicleReplacementOutput, error)
}

// UnimplementedVehicleReplacementServer can be embedded to have forward compatible implementations.
type UnimplementedVehicleReplacementServer struct {
}

func (*UnimplementedVehicleReplacementServer) CreateMtVehicle(ctx context.Context, req *VehicleReplacementRequest) (*VehicleReplacementOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMtVehicle not implemented")
}
func (*UnimplementedVehicleReplacementServer) UpdateMtVehicle(ctx context.Context, req *VehicleReplacementRequest) (*VehicleReplacementOutput, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMtVehicle not implemented")
}

func RegisterVehicleReplacementServer(s *grpc.Server, srv VehicleReplacementServer) {
	s.RegisterService(&_VehicleReplacement_serviceDesc, srv)
}

func _VehicleReplacement_CreateMtVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleReplacementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleReplacementServer).CreateMtVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.VehicleReplacement/CreateMtVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleReplacementServer).CreateMtVehicle(ctx, req.(*VehicleReplacementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _VehicleReplacement_UpdateMtVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VehicleReplacementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(VehicleReplacementServer).UpdateMtVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/packets.VehicleReplacement/UpdateMtVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(VehicleReplacementServer).UpdateMtVehicle(ctx, req.(*VehicleReplacementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _VehicleReplacement_serviceDesc = grpc.ServiceDesc{
	ServiceName: "packets.VehicleReplacement",
	HandlerType: (*VehicleReplacementServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMtVehicle",
			Handler:    _VehicleReplacement_CreateMtVehicle_Handler,
		},
		{
			MethodName: "UpdateMtVehicle",
			Handler:    _VehicleReplacement_UpdateMtVehicle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vehicle_replacement.proto",
}
